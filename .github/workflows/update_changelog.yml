name: Update Changelog

on:
  pull_request:
    types: [closed]
    branches: [main, master]

jobs:
  update-changelog:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Extract version from build.gradle.kts
        id: get_version
        run: echo "VERSION=$(./gradlew printVersion -q)" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%B %d, %Y')" >> $GITHUB_ENV

      - name: Extract changelog content from PR description
        id: extract_changelog
        run: |
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}")
          
          # Extract content between BEGIN CHANGELOG and END CHANGELOG tags
          CHANGELOG_CONTENT=$(echo "$PR_BODY" | jq -r '.body' | sed -n '/<!-- BEGIN CHANGELOG -->/,/<!-- END CHANGELOG -->/p' | grep -v "<!-- BEGIN CHANGELOG -->" | grep -v "<!-- END CHANGELOG -->")
          
          # Remove leading/trailing whitespace and empty lines
          CHANGELOG_CONTENT=$(echo "$CHANGELOG_CONTENT" | sed '/^$/d' | sed 's/^[ \t]*//')
          
          # Check if content is not empty
          if [ -z "$CHANGELOG_CONTENT" ]; then
            echo "No changelog content found in PR description"
            exit 0
          fi
          
          # Save content to a temporary file
          echo "$CHANGELOG_CONTENT" > /tmp/changelog_content.txt

      - name: Update changelog.md
        run: |
          # Check if changelog content exists
          if [ ! -f /tmp/changelog_content.txt ]; then
            echo "No changelog content to add"
            exit 0
          fi
          
          CHANGELOG_CONTENT=$(cat /tmp/changelog_content.txt)
          
          # Create new section with version and date
          NEW_SECTION="## (V${{ env.VERSION }}) ${{ env.DATE }}\n\n$CHANGELOG_CONTENT\n"
          
          # Insert new section after the header (line 5)
          sed -i "5i\\$NEW_SECTION" docs/changelog.md

      - name: Commit and push changes
        run: |
          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git add docs/changelog.md
          git commit -m "Update changelog for version ${{ env.VERSION }}"
          git push
